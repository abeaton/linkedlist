'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _linkedListNode = require('../es6/linkedListNode.js');

var _linkedListNode2 = _interopRequireDefault(_linkedListNode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _avaThrowsHelper(fn, data) {
	try {
		return fn();
	} catch (e) {
		var type = typeof e === 'undefined' ? 'undefined' : _typeof(e);

		if (e !== null && (type === "object" || type === "function")) {
			try {
				Object.defineProperty(e, "_avaThrowsHelperData", {
					value: data
				});
			} catch (e) {}
		}

		throw e;
	}
}

(0, _ava2.default)("Test constructor, null throws", function (t) {
	t.throws(_avaThrowsHelper(function () {
		return function () {
			return new _linkedListNode2.default(null);
		};
	}, {
		line: 5,
		column: 10,
		source: '() => new Node(null)',
		filename: '/Users/abeaton/Desktop/github/linkedlist/tests/linkedListNode_test.js'
	}));
});

(0, _ava2.default)("Test getValue, int", testGetValue, 2, 2);
(0, _ava2.default)("Test getValue, string", testGetValue, "test", "test");

function testGetValue(t, input, expected) {
	var node = new _linkedListNode2.default(input);
	t.is(node.getValue(), input);
}
//# sourceMappingURL=../node_modules/.cache/ava/6cd359fc3bebc4ce09a95e6a366e56d4.js.map